name: Self Approve PR

on:
  workflow_dispatch: # Allows manual triggering from GitHub Actions UI
    inputs:
      pr_number:
        description: "Pull Request Number to Approve"
        required: true
        type: number

jobs:
  approve:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch PR Author
        id: get_author
        run: |
          AUTHOR=$(gh pr view ${{ inputs.pr_number }} --json author --jq '.author.login')
          echo "PR_AUTHOR=$AUTHOR" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify PR Author
        run: |
          echo "PR Author: $PR_AUTHOR"
          echo "Triggering User: ${{ github.actor }}"
          if [ "$PR_AUTHOR" != "${{ github.actor }}" ]; then
            echo "‚ùå You are not the author of this PR! Approval is denied."
            exit 1
          fi
        
      # - name: Approve PR
      #   uses: hmarr/auto-approve-action@v3
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     pull-request-number: ${{ github.event.pull_request.number || inputs.pr_number }}

      - name: Generate GitHub App Token
        id: generate_token
        run: |
          # Install dependencies for generating a GitHub App token
          curl -sSL https://github.com/cli/cli/releases/download/v2.24.0/gh_2.24.0_linux_amd64.tar.gz | tar -xz
          sudo mv gh_2.24.0_linux_amd64/bin/gh /usr/local/bin
          
          # Authenticate and create a GitHub App token
          gh auth login --with-token < ${{ secrets.SELF_APPROVE_PR_APP_PRIVATE_KEY }}
          TOKEN=$(gh auth status --json token -q ".token")
          echo "APP_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Approve Specified PR Using GitHub App
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.SELF_APPROVE_PR_APP_PRIVATE_KEY }}" \
            -d '{"event":"APPROVE"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number || inputs.pr_number }}/reviews
