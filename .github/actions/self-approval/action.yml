name: 'GitHub Repository Self-Approve Action'
description: 'A GitHub Action to approve your own pull request for a protected branch using a GitHub App.'

branding:
  icon: 'git-pull-request'
  color: 'blue'

inputs:
  GITHUB_TOKEN:
    required: true
  client_id: # Found in settings of your app.
    required: true
  private_key: # Found in settings of your app.
    required: true
  installation_id: # Found in url of installed app.
    required: true
  pr_number: # Found in the url of the PR or next to the title.
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Fetch PR Author
      id: get_author
      run: |
        AUTHOR=$(gh pr view ${{ inputs.pr_number }} --json author --jq '.author.login')
        echo "PR_AUTHOR=$AUTHOR" >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Verify PR Author
      run: |
        echo "PR Author: $PR_AUTHOR"
        echo "Triggering User: ${{ github.actor }}"
        if [ "$PR_AUTHOR" != "${{ github.actor }}" ]; then
          echo "‚ùå You are not the author of this PR! Approval is denied."
          exit 1
        fi
    
    - name: Generate JWT and Approve PR
      run: |
        # Set environment variables for your GitHub App
        APP_ID="${{ inputs.client_id }}"
        INSTALLATION_ID="${{ inputs.installation_id }}"
        PRIVATE_KEY="${{ inputs.private_key }}"
        PR_NUMBER="${{ inputs.pr_number }}"

        # JWT header creation
        now=$(date +%s)
        iat=$((${now} - 60)) # Issues 60 seconds in the past
        exp=$((${now} + 600)) # Expires 10 minutes in the future
        
        b64enc() { openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n'; }
        
        header_json='{
            "typ":"JWT",
            "alg":"RS256"
        }'
        # Header encode
        header=$( echo -n "${header_json}" | b64enc )
        
        payload_json="{
            \"iat\":${iat},
            \"exp\":${exp},
            \"iss\":\"${APP_ID}\"
        }"
        # Payload encode
        payload=$( echo -n "${payload_json}" | b64enc )
        
        # Signature
        header_payload="${header}"."${payload}"
        signature=$(
            openssl dgst -sha256 -sign <(echo -n "${PRIVATE_KEY}") \
            <(echo -n "${header_payload}") | b64enc
        )
        
        # Create JWT
        JWT="${header_payload}"."${signature}"
        printf '%s\n' "JWT: $JWT"

        # Get installation access token
        INSTALL_TOKEN=$(curl -s \
          -X POST \
          -H "Authorization: Bearer $JWT" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens | \
          jq -r .token)

        printf '%s\n' "INSTALL_TOKEN: $INSTALL_TOKEN"

        # Check if the installation token was obtained
        if [ -z "$INSTALL_TOKEN" ]; then
          echo "Failed to obtain installation access token"
          exit 1
        fi

        # Approve the specified PR using the access token
        curl -s \
          -X POST \
          -H "Authorization: Bearer $INSTALL_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          -d '{"event": "APPROVE"}' \
          https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews
